// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.

/////////////////////////////////////////////////////////////////////////////
// CCreaturePicture2 wrapper class

class CCreaturePicture2 : public CWnd
{
protected:
	DECLARE_DYNCREATE(CCreaturePicture2)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0x843eace9, 0xd2d6, 0x11d2, { 0x9d, 0x30, 0x0, 0x90, 0x27, 0x1e, 0xea, 0xbe } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName,
		LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect,
		CWnd* pParentWnd, UINT nID,
		CCreateContext* pContext = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); }

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle,
		const RECT& rect, CWnd* pParentWnd, UINT nID,
		CFile* pPersist = NULL, BOOL bStorage = FALSE,
		BSTR bstrLicKey = NULL)
	{ return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); }

// Attributes
public:
	short GetPoseCount();
	void SetPoseCount(short);
	short GetBorderStyle();
	void SetBorderStyle(short);
	float GetScale();
	void SetScale(float);
	BOOL GetFriction();
	void SetFriction(BOOL);
	double GetAngle();
	void SetAngle(double);

// Operations
public:
	CString GetPoseString(short Index);
	void SetPoseString(short Index, LPCTSTR lpszNewValue);
	void SetAppearance(short HeadGenus, short HeadVariant, short BodyGenus, short BodyVariant, short LegsGenus, short LegsVariant, short ArmsGenus, short ArmsVariant, short TailGenus, short TailVariant, short EarGenus, short EarVariant, 
		short HairGenus, short HairVariant, short Sex, short Age);
	void AboutBox();
};

