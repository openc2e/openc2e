// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "creaturepicture.h"

/////////////////////////////////////////////////////////////////////////////
// CCreaturePicture

IMPLEMENT_DYNCREATE(CCreaturePicture, CWnd)

/////////////////////////////////////////////////////////////////////////////
// CCreaturePicture properties

short CCreaturePicture::GetPoseCount()
{
	short result;
	GetProperty(0x4, VT_I2, (void*)&result);
	return result;
}

void CCreaturePicture::SetPoseCount(short propVal)
{
	SetProperty(0x4, VT_I2, propVal);
}

short CCreaturePicture::GetBorderStyle()
{
	short result;
	GetProperty(DISPID_BORDERSTYLE, VT_I2, (void*)&result);
	return result;
}

void CCreaturePicture::SetBorderStyle(short propVal)
{
	SetProperty(DISPID_BORDERSTYLE, VT_I2, propVal);
}

float CCreaturePicture::GetScale()
{
	float result;
	GetProperty(0x1, VT_R4, (void*)&result);
	return result;
}

void CCreaturePicture::SetScale(float propVal)
{
	SetProperty(0x1, VT_R4, propVal);
}

BOOL CCreaturePicture::GetFriction()
{
	BOOL result;
	GetProperty(0x2, VT_BOOL, (void*)&result);
	return result;
}

void CCreaturePicture::SetFriction(BOOL propVal)
{
	SetProperty(0x2, VT_BOOL, propVal);
}

double CCreaturePicture::GetAngle()
{
	double result;
	GetProperty(0x3, VT_R8, (void*)&result);
	return result;
}

void CCreaturePicture::SetAngle(double propVal)
{
	SetProperty(0x3, VT_R8, propVal);
}

/////////////////////////////////////////////////////////////////////////////
// CCreaturePicture operations

CString CCreaturePicture::GetPoseString(short Index)
{
	CString result;
	static BYTE parms[] =
		VTS_I2;
	InvokeHelper(0x6, DISPATCH_PROPERTYGET, VT_BSTR, (void*)&result, parms,
		Index);
	return result;
}

void CCreaturePicture::SetPoseString(short Index, LPCTSTR lpszNewValue)
{
	static BYTE parms[] =
		VTS_I2 VTS_BSTR;
	InvokeHelper(0x6, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 Index, lpszNewValue);
}

void CCreaturePicture::SetAppearance(short HeadGenus, short HeadVariant, short BodyGenus, short BodyVariant, short LegsGenus, short LegsVariant, short ArmsGenus, short ArmsVariant, short TailGenus, short TailVariant, short Sex, short Age)
{
	static BYTE parms[] =
		VTS_I2 VTS_I2 VTS_I2 VTS_I2 VTS_I2 VTS_I2 VTS_I2 VTS_I2 VTS_I2 VTS_I2 VTS_I2 VTS_I2;
	InvokeHelper(0x5, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 HeadGenus, HeadVariant, BodyGenus, BodyVariant, LegsGenus, LegsVariant, ArmsGenus, ArmsVariant, TailGenus, TailVariant, Sex, Age);
}

void CCreaturePicture::AboutBox()
{
	InvokeHelper(0xfffffdd8, DISPATCH_METHOD, VT_EMPTY, NULL, NULL);
}

